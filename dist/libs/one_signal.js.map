{"version":3,"sources":["../src/libs/one_signal.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,uCAAgC;AAEhC,MAAM,GAAG,GAAG,4CAA4C,CAAC;AACzD,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC;AACrE,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,IAAI,IAAI,CAAC;AACzE,MAAM,OAAO,GAAG,IAAI,iBAAO,CAAC;IACxB,OAAO,EAAE;QACL,cAAc,EAAE,iCAAiC;QACjD,eAAe,EAAE,SAAS,QAAQ,EAAE;KACvC;CACJ,CAAC,CAAC;AAEH,kBAAe;IACX,IAAI,CAAC,IAAI;QACL,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE;YAC7C,MAAM,EAAE,MAAM;SACjB,CAAC,CAAC,CAAC;IACR,CAAC;IACD,MAAM,CAAC,iBAAyB,EAAE,OAAO;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;YACxC,kBAAkB,EAAE,CAAC,iBAAiB,CAAC;SAC1C,CAAC,CAAC,CAAC;IACR,CAAC;IACD,OAAO,CAAC,OAAO;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;YACxC,iBAAiB,EAAE,CAAC,KAAK,CAAC;SAC7B,CAAC,CAAC,CAAA;IACP,CAAC;IACD,SAAS,CAAC,kBAA4B,EAAE,OAAO;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;YACxC,kBAAkB,EAAE,kBAAkB;SACzC,CAAC,CAAC,CAAC;IACR,CAAC;IACD,WAAW,CAAC,SAAiB,EAAE,OAAO;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;YACxC,iBAAiB,EAAE,CAAC,SAAS,CAAC;SACjC,CAAC,CAAC,CAAA;IACP,CAAC;IACD,cAAc,CAAC,UAAoB,EAAE,OAAO;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;YACxC,iBAAiB,EAAE,UAAU;SAChC,CAAC,CAAC,CAAC;IACR,CAAC;IACD,eAAe,CAAC,UAAiB,EAAE,OAAO;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;YACxC,OAAO,EAAE,UAAU;SACtB,CAAC,CAAC,CAAC;IACR,CAAC;CACJ,CAAA","file":"one_signal.js","sourcesContent":["import * as config from \"./config\";\r\nimport Request from \"./request\";\r\n\r\nconst url = \"https://onesignal.com/api/v1/notifications\";\r\nconst app_id = config.one_signal && config.one_signal.app_id || null;\r\nconst rest_key = config.one_signal && config.one_signal.rest_key || null;\r\nconst request = new Request({\r\n    headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n        \"Authorization\": `Basic ${rest_key}`\r\n    }\r\n});\r\n\r\nexport default {\r\n    send(data) {\r\n        return request.post(url, Object.assign({}, data, {\r\n            app_id: app_id\r\n        }));\r\n    },\r\n    sendTo(registrationToken: string, payload) {\r\n        return this.send(Object.assign({}, payload, {\r\n            include_player_ids: [registrationToken]\r\n        }));\r\n    },\r\n    sendAll(payload) {\r\n        return this.send(Object.assign({}, payload, {\r\n            included_segments: [\"All\"]\r\n        }))\r\n    },\r\n    broadcast(registrationTokens: [string], payload) {\r\n        return this.send(Object.assign({}, payload, {\r\n            include_player_ids: registrationTokens\r\n        }));\r\n    },\r\n    sendToGroup(groupName: string, payload) {\r\n        return this.send(Object.assign({}, payload, {\r\n            included_segments: [groupName]\r\n        }))\r\n    },\r\n    broadcastGroup(groupNames: [string], payload) {\r\n        return this.send(Object.assign({}, payload, {\r\n            included_segments: groupNames\r\n        }));\r\n    },\r\n    sendToCondition(conditions: [any], payload) {\r\n        return this.send(Object.assign({}, payload, {\r\n            filters: conditions\r\n        }));\r\n    }\r\n}"]}
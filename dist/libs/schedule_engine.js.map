{"version":3,"sources":["../src/libs/schedule_engine.ts"],"names":[],"mappings":"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","file":"schedule_engine.js","sourcesContent":["import * as config from \"./config\";\r\nexport default {\r\n    generateSchedule(duration, gymList, preScheduleGyms, isBeginner, frequency, frequencyCount, gymLike, caloriesLimit, gender, weight, height, age) {\r\n        let result = [];\r\n        let brmr = this.calculateBRM(gender, weight, height, age);\r\n        for (let i = 0; i < duration; i++) {\r\n            console.log(`Generate for ${i}th day`);\r\n            let each = [];\r\n            let totalCalories = 0;\r\n            while (totalCalories < caloriesLimit && each.length != gymList.length) {\r\n                let priorityGyms = [];\r\n                for (let j = 0; j < gymList.length; j++) {\r\n                    let pointBeginer = 0;\r\n                    let pointPreScheduleDay = 0;\r\n                    let pointSameType = 0;\r\n                    let pointMuscleCount = 0;\r\n                    let pointFrequency = 0;\r\n                    let pointLike = 0;\r\n                    let selectGym = gymList[j];\r\n                    for (let t = 0; t < preScheduleGyms.length; t++) {\r\n                        let exist = preScheduleGyms[t].filter(g => g.id == selectGym.id);\r\n                        if (exist) {\r\n                            pointPreScheduleDay = (t + 1) / preScheduleGyms.length;\r\n                        }\r\n                    }\r\n                    let sameTypeGyms = each.filter(g => g.muscle_id == selectGym.muscle_id);\r\n                    pointSameType = sameTypeGyms.length / each.length || 0;\r\n\r\n                    pointMuscleCount = sameTypeGyms.length ? 0 : 1;\r\n\r\n                    pointFrequency = frequency / frequencyCount || 0;\r\n\r\n                    let point = this.calculateGymPoint(pointBeginer, pointPreScheduleDay, pointSameType, pointMuscleCount, pointLike, pointFrequency);\r\n\r\n                    let index = this.findPosition(priorityGyms, point);\r\n\r\n                    priorityGyms.splice(index, 0, {\r\n                        point: point,\r\n                        gym: selectGym\r\n                    });\r\n                }\r\n                console.log(\"#######################\", priorityGyms.length);\r\n                \r\n                priorityGyms = priorityGyms.filter(g => each.filter(e => e.id == g.gym.id).length == 0);\r\n                \r\n                console.log(\"#######################\", priorityGyms.length);\r\n                if(priorityGyms.length == 0){\r\n                    break;\r\n                } else {\r\n                    console.log(priorityGyms[0].gym);\r\n                    \r\n                    each.push(priorityGyms[0].gym);\r\n                    totalCalories += this.calculateCaloriesBurn(priorityGyms[0].gym.met_2, brmr, weight, 30);\r\n                }\r\n            }\r\n            result[i] = each;\r\n        }\r\n        return result;\r\n    },\r\n    findPosition(array, value) {\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (array[i].point < value) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    calculateGymPoint(pointBeginer, pointPreScheduleDay, pointSameType, pointMuscleCount, pointLike, pointFrequency) {\r\n        let sum = pointBeginer * config.schedule.beginerFactor +\r\n            pointPreScheduleDay * config.schedule.limitDateFactor +\r\n            pointSameType * config.schedule.sameTypeFactor +\r\n            pointMuscleCount * config.schedule.moreTypeFactor +\r\n            pointLike * config.schedule.likeFactor +\r\n            pointFrequency * config.schedule.frequencyFactor;\r\n        return sum;\r\n    },\r\n\r\n    calculateBRM(gender, weight, height, age) {\r\n        //male gender == 1\r\n        if (gender == 1) {\r\n            return 66.4730 + 5.0033 * height + 13.7516 * weight - 6.7550 * age;\r\n        } else {\r\n            return 655.0955 + 1.8496 * height + 9.5634 * weight - 4.6756 * age;\r\n        }\r\n    },\r\n\r\n    calculateCaloriesBurn(met, brmr, weight, duration) {\r\n        let correct_met = this.calculateCorrectedMet(met, brmr, weight);\r\n        return duration * correct_met * brmr / 1440;\r\n    },\r\n\r\n    calculateCorrectedMet(met, brmr, weight) {\r\n        return met * 3.5 / (brmr / (1.440 * 5 * weight));\r\n    }\r\n}\r\n"]}
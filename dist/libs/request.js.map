{"version":3,"sources":["../src/libs/request.ts"],"names":[],"mappings":"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","file":"request.js","sourcesContent":["var request = require('request');\r\nvar default_options = {\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\n\r\nexport default class Request {\r\n\r\n    public get;\r\n    public post;\r\n    public put;\r\n    public delete;\r\n\r\n    constructor(options) {\r\n        let _this = this;\r\n        var opt = this.init(options);\r\n        ['get', 'post', 'put', 'delete'].map(function(method) {\r\n            _this[method] = req(method, opt);\r\n        });\r\n    }\r\n\r\n    init(options) {\r\n        // default using json\r\n        var opt = JSON.parse(\r\n            JSON.stringify(default_options)\r\n        );\r\n\r\n        for (var i in options) {\r\n            if (options.hasOwnProperty(i)) {\r\n                opt[i] = options[i];\r\n            }\r\n        }\r\n        return opt;\r\n    }\r\n}\r\n\r\nfunction makeOptions(method, opt) {\r\n    var options : any = {\r\n        timeout: 10000\r\n    };\r\n    for (var i in opt) {\r\n        if (opt.hasOwnProperty(i)) {\r\n            options[i] = opt[i];\r\n        }\r\n    }\r\n    options.method = method;\r\n    return options;\r\n}\r\n\r\nfunction req(method, opt) {\r\n    return function(url, body, formData) {\r\n        var options = makeOptions(method, opt);\r\n        options.url = (opt.host ? opt.host : \"\") + url;\r\n        if (typeof body === 'object') {\r\n            options.json = true;\r\n            options.body = body;\r\n        }\r\n        if (formData) {\r\n            options.formData = formData;\r\n            options.json = false;\r\n            delete options.body;\r\n        }\r\n        console.log(new Date() + ' ' + method.toUpperCase() +': ' + url);\r\n        console.log('options');\r\n        console.log(options);\r\n        console.log('------');\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            request(options, function (err, res, body) {\r\n                try {\r\n                    var object = JSON.parse(body);\r\n                    resolve(object);\r\n                } catch (e) {\r\n                    console.log('return string');\r\n                }\r\n                return err ? reject(err) : resolve(body);\r\n            });\r\n        });\r\n    };\r\n}"]}
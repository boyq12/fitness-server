{"version":3,"sources":["../src/sockets/route.ts"],"names":[],"mappings":"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","file":"route.js","sourcesContent":["import auth from \"libs/auth\";\r\nimport socketManager from \"sockets/socket_manager\";\r\nimport {ResponseCode} from \"enums/response-code\";\r\n\r\nvar controller = require(\"sockets/controllers\");\r\nvar eventEmitter = require(\"events/event-emitter\");\r\n\r\n\r\nvar fn = function (socket) {\r\n\r\n  console.log(\"Socket connected\", socket.id);\r\n\r\n  socket.use(async function (s, next) {\r\n    console.log(s);\r\n    try {\r\n      s[1] = JSON.parse(s[1]);\r\n    } catch (e) {\r\n    }\r\n    let token = socket.token || s[1].token || null;\r\n    let response = {};\r\n    let result = await auth.verify(token);\r\n    if (result && !(result as any).error) {\r\n      socket.jwt = result;\r\n      socket.token = token;\r\n      s[1].jwt = result;\r\n      response = {\r\n        success: true,\r\n        data: null\r\n      };\r\n      socket.uid = (result as any).id;\r\n      socketManager.registerClient((result as any).id, socket);\r\n      next();\r\n    } else {\r\n      socketManager.removeClient(socket.uid, socket.id);\r\n      response = {\r\n        success: false,\r\n        error: {\r\n          code: ResponseCode.SESSION_TIMEOUT,\r\n          message: \"Token is expired\",\r\n          data: {\r\n            token: token\r\n          }\r\n        }\r\n      };\r\n      if (s[2]) {\r\n        s[2](response);\r\n      } else {\r\n\r\n      }\r\n    }\r\n  });\r\n\r\n  socket.on('login', async function (data, cb) {\r\n    let token = data.token;\r\n    let response = {};\r\n    let result = await auth.verify(token);\r\n    if (result && !(result as any).error) {\r\n      socket.jwt = result;\r\n      socket.uid = (result as any).id;\r\n      socket.token = token;\r\n      socketManager.registerClient((result as any).id, socket);\r\n      response = {\r\n        success: true,\r\n        data: null\r\n      }\r\n    } else {\r\n      response = {\r\n        success: false,\r\n        error: {\r\n          code: ResponseCode.SESSION_TIMEOUT,\r\n          message: \"Token is expired\",\r\n          data: {\r\n            token\r\n          }\r\n        }\r\n      }\r\n    }\r\n    cb(response);\r\n  });\r\n  socket.on('connection', function () {\r\n    console.log(\"on connection\");\r\n  });\r\n  socket.on('disconnect', function () {\r\n    socketManager.removeClient(socket.uid, socket.id);\r\n  });\r\n\r\n  socket.on(\"test\", function (data, cb) {\r\n    console.log(data, cb);\r\n    cb({\r\n      success: true,\r\n      message: \"connect successful\"\r\n    });\r\n  });\r\n\r\n};\r\n\r\nexport = fn;\r\n"]}
{"version":3,"sources":["../src/sockets/socket_manager.ts"],"names":[],"mappings":"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","file":"socket_manager.js","sourcesContent":["import EventCode from \"enums/event-code\";\r\nexport class SocketManager {\r\n  private clients = {};\r\n\r\n  public getClient(id: number) {\r\n    return this.clients[id];\r\n  }\r\n\r\n  public registerClient(id: number, socket) {\r\n    if (!this.clients[id] || this.clients[id].length == 0) {\r\n      this.clients[id] = [];\r\n    }\r\n\r\n    let found = this.clients[id].find(item => item.id == socket.id);\r\n    if (!found) {\r\n      this.clients[id].push(socket);\r\n    }\r\n  }\r\n\r\n  public removeClient(userId, socketId) {\r\n    this.clients[userId] = this.clients[userId].filter(socket => socket.id != socketId);\r\n    if (this.clients[userId].length == 0) {\r\n      delete this.clients[userId];\r\n    }\r\n  }\r\n\r\n  public sendTo(id: number, event: EventCode, data) {\r\n    let clients = this.clients[id];\r\n    if (!clients) return;\r\n\r\n\r\n\r\n    clients.forEach(client => {\r\n      if (!client || client.disconnected) {\r\n        console.warn(\"SocketManager::sendTo\", id, client.id, \"is disconnected or not found\");\r\n      } else {\r\n        console.log(\"Send to\", id, client.id, event);\r\n        client.emit(event, data);\r\n      }\r\n    })\r\n  }\r\n\r\n  public sendToMany(ids: number[], event: EventCode, data) {\r\n    for (let id of ids) {\r\n      this.sendTo(id, event, data);\r\n    }\r\n  }\r\n\r\n  public sendToAll(event: EventCode, data) {\r\n    let ids = this.getOnlineList();\r\n    this.sendToMany(ids, event, data);\r\n  }\r\n\r\n  public getOnlineList() {\r\n    let ids = Object.keys(this.clients)\r\n      .map(x => parseInt(x))\r\n      .filter(x => !Number.isNaN(x));\r\n    return ids;\r\n  }\r\n}\r\n\r\nconst socketManager = new SocketManager();\r\nexport default socketManager;\r\n"]}
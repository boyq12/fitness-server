{"version":3,"sources":["../src/helpers/common/mail-helper.ts"],"names":[],"mappings":"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","file":"mail-helper.js","sourcesContent":["import {schemas} from \"schemas\";\r\nimport * as config from \"libs/config\";\r\nconst nodemailer = require('nodemailer');\r\n\r\nexport default class MailHelper {\r\n  shop_id;\r\n  shop;\r\n  accounts = [];\r\n  defaultEmail;\r\n\r\n  constructor() {\r\n    this.defaultEmail = config.defaultEmail;\r\n  }\r\n\r\n  public async setShop(shop_id?: number) {\r\n    let shop = await schemas.Shop.findByPrimary(shop_id);\r\n    if (!shop) {\r\n      throw `Shop not found: ${shop_id}`;\r\n    }\r\n    this.shop = shop;\r\n    this.shop_id = shop_id;\r\n\r\n    let accounts = await shop.getSupportEmails();\r\n    this.accounts = accounts;\r\n  }\r\n\r\n  private async sendMail(mail) {\r\n    let chosen = this.accounts[0] || this.defaultEmail;\r\n    console.log(\"Email\", this.accounts[0], this.defaultEmail, chosen);\r\n    if (!chosen) {\r\n      throw \"Shop have not been set up or supporter mail can not be found\";\r\n    }\r\n\r\n    var user = chosen.username;\r\n    var pass = chosen.password;\r\n    var host = chosen.host;\r\n\r\n    var smtpConfig = {\r\n      host: host,\r\n      port: chosen.port || 587,\r\n      secure: chosen.secure || false,\r\n      auth: {user: user, pass: pass}\r\n    };\r\n    var transporter = nodemailer.createTransport(smtpConfig);\r\n    var mailOptions = {\r\n      from: `\"${this.shop.title}\" <${user}>`,\r\n      to: mail.to,\r\n      subject: mail.subject,\r\n      text: mail.text,\r\n      html: mail.html\r\n    };\r\n    return transporter.sendMail(mailOptions, function (error, info) {\r\n      if (error) {\r\n        return console.log(error);\r\n      }\r\n      console.log('Message sent: ' + info.response);\r\n    });\r\n  }\r\n\r\n  public async sendForgotPasswordMail(to: string, code: string) {\r\n\r\n    let content = `Mã khôi phục cho tài khoản của bạn tại ${this.shop.title}: ${code} <br>Lưu ý: Mã này chỉ tồn tại trong vòng 5 phút sau khi cấp`;\r\n    let content_text = content.replaceAll(\"<br>\", \"\");\r\n\r\n    let forgotMail = {\r\n      to: to,\r\n      subject: `[${this.shop.title}] Mã khôi phục mật khẩu`,\r\n      text: content_text,\r\n      html: content\r\n    };\r\n    return this.sendMail(forgotMail);\r\n  }\r\n\r\n  public async sendActivateCode(to: string, code: string) {\r\n    let content = `Mật mã kích hoạt cho tài khoản của bạn tại ${this.shop.title}: ${code}`;\r\n    let content_text = content.replaceAll(\"<br>\", \"\");\r\n\r\n    let activationMail = {\r\n      to: to,\r\n      subject: `[${this.shop.title}] Mã kích hoạt tài khoản`,\r\n      text: content_text,\r\n      html: content\r\n    };\r\n\r\n    return this.sendMail(activationMail);\r\n  }\r\n};\r\n"]}
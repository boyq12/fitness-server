{"version":3,"sources":["../src/helpers/common/image-helper.ts"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,sCAAsC;AACtC,oCAA6B;AAC7B,qCAA8B;AAC9B,+BAA+B;AAC/B,qCAAgC;AAEhC;IACI,KAAK,CAAC,MAAM,CAAC,IAAI;QACb,IAAI,CAAC;YACD,2CAA2C;YAC7C,IAAI,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC;YACnC,IAAI,UAAU,GAAG;gBACb,KAAK,EAAE,YAAY,IAAI,YAAY,CAAC,KAAK,IAAI,GAAG;gBAChD,MAAM,EAAE,YAAY,IAAI,YAAY,CAAC,MAAM,IAAI,GAAG;gBAClD,KAAK,EAAE,YAAY,IAAI,YAAY,CAAC,KAAK,IAAI,GAAG;gBAChD,SAAS,EAAE,YAAY,IAAI,YAAY,CAAC,SAAS,IAAI,GAAG;aAC3D,CAAC;YACF,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACpB,MAAM;oBACF,OAAO,EAAE,gBAAgB;iBAC5B,CAAC;YAGN,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAChC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;qBACjB,MAAM,CAAC,IAAI,CAAC;qBACZ,IAAI,EAAE;qBACN,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,MAAM,CAAC,CAAC;gBAC/D,IAAI,CAAC,WAAW,CAAE,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,MAAM,CAAC;YACjE,CAAC;YAED,+BAA+B;YAC/B,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;iBACjB,IAAI,EAAE;iBACN,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,CAAC,QAAQ,MAAM,CAAC;YACvC,IAAI,CAAC;gBACD,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;YAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,CAAC;YACZ,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,CAAC;QACZ,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAAQ;QACxB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QACvC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAC/B,IAAI,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzC,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,gBAAgB,IAAI,QAAQ,MAAM,CAAC;YAClG,IAAI,WAAW,GAAG,KAAK,EAAE;iBACpB,GAAG,EAAE;iBACL,MAAM,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,IAAI;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACN,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;oBACtC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAChB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC;wBACJ,QAAQ,EAAE,GAAG,QAAQ,EAAE;wBACvB,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,IAAI;wBACV,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,gBAAgB,GAAG;qBACvF,CAAC,CAAA;gBACN,CAAC;YACL,CAAC,CAAC,CAAC;YACP,iBAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,GAAG;gBACvC,MAAM,CAAC,GAAG,CAAC,CAAA;YACf,CAAC,CAAC;iBACG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO;QAChC,IAAI,YAAY,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG;YACJ,KAAK,EAAE,YAAY,CAAC,YAAY;YAChC,GAAG,EAAE,GAAG,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE;SACpC,CAAC;QAEF,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAA;QAChE,CAAC;QACD,MAAM,CAAC,CAAC,CAAC;IACb,CAAC;IAED,KAAK,CAAC,WAAW,CAAE,GAAG,EAAE,OAAO;QAC3B,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QACrD,IAAI,MAAM,GAAG,MAAM,iBAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;CACJ;AA3FD,kCA2FC;AAED,MAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;AACtC,kBAAe,WAAW,CAAC","file":"image-helper.js","sourcesContent":["var fs = require(\"fs\");\r\nimport * as config from \"libs/config\";\r\nimport misc from \"libs/misc\";\r\nimport request from \"request\";\r\nimport * as sharp from \"sharp\";\r\nimport {schemas} from \"schemas\";\r\n\r\nexport class ImageHelper {\r\n    async resize(file) {\r\n        try {\r\n            //noinspection TypeScriptUnresolvedVariable\r\n          let imageSizeCfg = config.image_size;\r\n            let imageSizes = {\r\n                large: imageSizeCfg && imageSizeCfg.large || 520,\r\n                medium: imageSizeCfg && imageSizeCfg.medium || 460,\r\n                small: imageSizeCfg && imageSizeCfg.small || 240,\r\n                thumbnail: imageSizeCfg && imageSizeCfg.thumbnail || 100\r\n            };\r\n            if (!file || !file.path)\r\n                throw {\r\n                    message: 'file not found'\r\n                };\r\n\r\n\r\n            file.resizedName = {};\r\n            for (let sizeName of Object.keys(imageSizes)) {\r\n                let size = imageSizes[sizeName];\r\n                await sharp(file.path)\r\n                    .resize(size)\r\n                    .jpeg()\r\n                    .toFile(`${file.destination}${file.filename}_${size}.jpg`);\r\n                file.resizedName [sizeName] = `${file.filename}_${size}.jpg`;\r\n            }\r\n\r\n            // convert origin image to jpeg\r\n            await sharp(file.path)\r\n                .jpeg()\r\n                .toFile(`${file.destination}${file.filename}.jpg`);\r\n            file.filename = `${file.filename}.jpg`;\r\n            try {\r\n                fs.unlinkSync(file.path);\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n\r\n            return file;\r\n        } catch (e) {\r\n            console.log(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    async downloadImage(imageUrl) {\r\n        console.log(\"DOWNLOADING: \", imageUrl);\r\n        return new Promise((resolve, reject) => {\r\n            let NOW = new Date().getTime();\r\n            let fileName = misc.sha1(NOW.toString());\r\n            let path = `${(config.dictionary && config.directory.image) || \"public/uploads\"}/${fileName}.png`;\r\n            var transformer = sharp()\r\n                .png()\r\n                .toFile(path, function (err, info) {\r\n                    if (err) {\r\n                        console.log(imageUrl, \"=>\", imageUrl);\r\n                        reject(err);\r\n                    } else {\r\n                        resolve({\r\n                            filename: `${fileName}`,\r\n                            type: 'png',\r\n                            path: path,\r\n                            destination: `${(config.dictionary && config.directory.image) || \"public/uploads\"}/`\r\n                        })\r\n                    }\r\n                });\r\n            request(imageUrl).on('error', function (err) {\r\n                reject(err)\r\n            })\r\n                .pipe(transformer);\r\n        });\r\n    }\r\n\r\n    async createImageObject(src, f_image) {\r\n        let image_resize = await this.resize(f_image);\r\n        let f = {\r\n            title: image_resize.originalname,\r\n            src: `${src}/${f_image.filename}`,\r\n        };\r\n\r\n        for (let sizeName of Object.keys(image_resize.resizedName)) {\r\n            f[sizeName] = `${src}/${image_resize.resizedName[sizeName]}`\r\n        }\r\n        return f;\r\n    }\r\n\r\n    async createImage (src, f_image) {\r\n        let f = await this.createImageObject(src, f_image);\r\n      let i_file = await schemas.Image.create(f);\r\n        return i_file;\r\n    }\r\n}\r\n\r\nconst imageHelper = new ImageHelper();\r\nexport default imageHelper;\r\n"]}
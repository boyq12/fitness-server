{"version":3,"sources":["../src/auth/authorization.ts"],"names":[],"mappings":";;AAAA,2EAAmE;AAEnE;CAMC;AAND,0CAMC;AAED,2BAAkC,OAAuB;IACrD,MAAM,CAAC,UAAU,MAAW,EAAE,WAAmB,EAAE,UAA8B;QAC7E,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;QACxC,MAAM,EAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAC,GAAG,OAAO,CAAC;QACvD,UAAU,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI;YAChC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;YACtB,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;YAClB,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC5C,CAAC;YAED,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,QAAQ,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC;mBAC1B,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;uBAC3D,CAAC,CAAC,WAAW,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;uBACjD,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAElE,EAAE,CAAC,CAAC,WAAW,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzD,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC;oBACxB,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC;gBACvD,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,2BAAgB,CAAC,YAAY,EAAE,CAAC,CAAC;YACrD,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,OAAO,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;gBAC1C,IAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACjC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACN,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,2BAAgB,CAAC,YAAY,EAAE,CAAC,CAAC;gBACrD,CAAC;YACL,CAAC;YAED,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC;QAEF,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC,CAAA;AACL,CAAC;AAvCD,8CAuCC","file":"authorization.js","sourcesContent":["import ResponseTemplate from \"../helpers/common/response-template\";\r\n\r\nexport class PermissionModel {\r\n    permission ?: string;\r\n    permissions ?: Array<string>;\r\n    role?: string;\r\n    roles?: Array<string>;\r\n    afterValid?: (jwt: any) => void;\r\n}\r\n\r\nexport function requirePermission(require:PermissionModel) {\r\n    return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\r\n        const originalMethod = descriptor.value;\r\n        const {role, roles, permission, permissions} = require;\r\n        descriptor.value = function (...args) {\r\n            let [req, res] = args;\r\n            let jwt = req.jwt;\r\n            if (!jwt || ['admin'].contains(jwt.role)) {\r\n                return originalMethod.apply(this, args);\r\n            }\r\n\r\n            let notValid = false;\r\n            notValid = (role && role != jwt.role)\r\n                    || (roles && Array.isArray(roles) && !roles.contains(jwt.role)\r\n                    || ((permissions || permission) && !jwt.permissions)\r\n                    || (permission && !jwt.permissions.contains(permission)));\r\n\r\n            if (permissions && Array.isArray(permissions) && !notValid) {\r\n                for (let p of permissions) {\r\n                    notValid = jwt.permissions.contains(p) || notValid;\r\n                }\r\n            }\r\n\r\n            if (notValid) {\r\n                return res.send(ResponseTemplate.accessDenied());\r\n            }\r\n\r\n            if (typeof require.afterValid == 'function') {\r\n                let is = require.afterValid(jwt);\r\n                if (!is) {\r\n                    return res.send(ResponseTemplate.accessDenied());\r\n                }\r\n            }\r\n\r\n            return originalMethod.apply(this, args);\r\n        };\r\n\r\n        return descriptor;\r\n    }\r\n}\r\n"]}
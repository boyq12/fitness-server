{"version":3,"sources":["../src/jobs/sequence.ts"],"names":[],"mappings":";AAAA,wCAA8C;AAG9C,iBAAS,KAAK;IACV,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,mBAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,iBAAO,CAAC,KAAK,CAAC,CAAC;gBAAC,QAAQ,CAAC;YAC9B,IAAI,MAAM,GAAG,MAAM,iBAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;gBACtC,KAAK,EAAE,CAAC;gBACR,KAAK,EAAE,CAAE,CAAE,IAAI,EAAE,MAAM,CAAE,CAAC;gBAC1B,UAAU,EAAE,CAAC,IAAI,CAAC;aACrB,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC9B,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC;oBAAC,KAAK,GAAG,SAAS,CAAC;gBACzC,EAAE,CAAC,CAAC,KAAK,IAAI,iBAAiB,CAAC;oBAAC,KAAK,GAAG,kBAAkB,CAAC;gBAC3D,MAAM,mBAAS,CAAC,KAAK,CAAC,mBAAmB,KAAK,0BAA0B,QAAQ,EAAE,CAAC,CAAC;YACxF,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;YAC1C,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;AACL,CAAC,CAAA","file":"sequence.js","sourcesContent":["import {schemas, sequelize} from \"../schemas\";\r\n\r\n\r\nexport = async function main() {\r\n    for (let table in sequelize.models) {\r\n        try {\r\n            if (!schemas[table]) continue;\r\n            let record = await schemas[table].findAll({\r\n                limit: 1,\r\n                order: [ [ 'id', 'DESC' ]],\r\n                attributes: ['id']\r\n            });\r\n            if (record && record.count()) {\r\n                let item = record[0].toJSON();\r\n                let sequence = parseInt(item.id) + 1;\r\n                console.log(\"sequence :: \", sequence);\r\n                if (table == 'Branch') table = 'Branche';\r\n                if (table == 'ProductCategory') table = 'ProductCategorie';\r\n                await sequelize.query(`ALTER SEQUENCE \"${table}s_id_seq\" RESTART WITH ${sequence}`);\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Not Found Table :: \", table);\r\n            console.error(e.stack);\r\n        }\r\n    }\r\n}"]}